#!/usr/bin/env node
"use strict";

var fs = require('fs'),
	when = require('when'),
	sequence = require('sequence'),
	express = require('express'),
	app = require('express')(),
	server = require('http').createServer(app),
	io = require('socket.io').listen(server),
	db = require('./lib/db'),
	util = require('./lib/util');

var users = {};

console.log('starting server');

server.listen(8080);

app.use("/images", express.static(__dirname + "/images"));
app.use("/static", express.static(__dirname + "/static"));

sequence().then(function(next){
	db.connect().then(next);
}).then(function(next){

	// data routes
	io.sockets.on('connection', function(socket){
		socket.on('requestTemplate', function(data){
			// var tmpl = loadTemplate(data.view);
			socket.emit('template', {
				'view': data.view,
			});
		});
		socket.on('login', function(data){
			// associate socket ID with user
			// return a list of chats with their chat IDs
			// emit list of messages
			console.log(data);
			socket.set('loggedIn', true);
		});
		socket.on('getMessages', function(data){
			db.getMessagesById(data.id).then(function(messages){
				socket.emit('messages', {
					'messages': messages,
					'id': data.id
				});
			});
		});
		socket.on('newMessage', function(data){
			// add message to database
			// check if recipient is online
			//   if so, look up socket id and emit it to them
		});
		socket.on('createUser', function(data){
			db.createUser(data.username).then(function(){
				socket.emit('refresh', {});
			});
		});
		socket.on('getUsers', function(){
			db.getAllUsers().then(function(users){
				socket.emit('users', {
					'users': users
				});
			});
		});
		socket.on('deleteUser', function(data){
			db.deleteUser(data.username).then(function(){
				socket.emit('refresh', {});
			});
		});
	});

	// app route
	app.get('/', function (req, res) {
		res.sendfile(__dirname + '/views/index.html');
	});

	// admin route
	app.get('/admin', function (req, res) {
		res.sendfile(__dirname + '/views/admin.html');
	});
});
