#!/usr/bin/env node
"use strict";

var fs = require('fs'),
	when = require('when'),
	sequence = require('sequence'),
	express = require('express'),
	app = require('express')(),
	server = require('http').createServer(app),
	io = require('socket.io').listen(server);
	// redis = require('redis'),
 //    client = redis.createClient();

var users = {};

console.log('starting server');

server.listen(8080);

app.use("/images", express.static(__dirname + "/images"));
app.use("/static", express.static(__dirname + "/static"));

// data routes
io.sockets.on('connection', function(socket){
	socket.on('requestTemplate', function(data){
		var tmpl = loadTemplate(data.view);
		socket.emit('template', {
			'view': data.view,
			'template': tmpl
		});
	});
	socket.on('login', function(data){
		// associate socket ID with user
		// return a list of chats with their chat IDs
		// emit list of messages
		console.log(data);
	});
	socket.on('getMessages', function(data){
		var messages = getMessagesById(data.id);
		socket.emit('messages', {
			'messages': messages,
			'id': data.id
		});
	});
	socket.on('newMessage', function(data){
		// add message to database
		// check if recipient is online
		//   if so, look up socket id and emit it to them
	});
	socket.on('createUser', function(data){
		console.log(data);
	});
});

// app route
app.get('/', function (req, res) {
	res.sendfile(__dirname + '/views/index.html');
});

// admin route
app.get('/admin', function (req, res) {
	res.sendfile(__dirname + '/views/admin.html');
});

function getAllUsers() {
	var d = when.defer();
	return d.promise;
}

function getAllMessages() {
	var d = when.defer();
	return d.promise;
}

function getMessagesById() {
	var d = when.defer();
	return d.promise;
}

function loadTemplate(templateName) {
	var tmpl = fs.readFileSync(__dirname + '/templates/' + templateName + '.tpl', 'utf-8');
	return tmpl;
}